


### LoopJackConnection
unset LoopJackConnection
. /etc/init.d/Fnct.D/aa49dbce-3079-11e3-98a2-001b3875b29c 

#unset LoopJackConnection ;
#function LoopJackConnection()
#{
 #local ArrayArg=( $* ) ;
 #local __call_locality=( LJC LoopJackConnection ) ;
 #local TypeUUID=$( uuidgen -t ) ;
	#local ArrayArg=( $* ) ; 
	#local Arg0=${ArrayArg[0]}    

 #local StrDefaultServerNamelist=${LJCDefaultServerName:=NONE} ;
 #local StrDefaultServer=${LJCDefaultJackServer:=/usr/local/bin/jackd} ; 
 #local StrOptionList=${LJCDefaultHardwareOption:=} ;
 #local StrOpenPortList=${LJCNbOpenPort:=512} ;
 #local StrAudioInterfaceList=${LJCAudioInterface:=alsa} ;
 #local StrRateList=${LJCRate:=44100} ;
 #local StrPeriodLenList=${LJCPeriodLen:=1024} ;
 #local StrNbPeriodsList=${LJCNbPeriods:=4} ;
 #local StrInputChannelList=${LJCInputChannel:=2} ;
 #local StrOutputChannelList=${LJCOutputChannel:=2} ;
 #local StrInputLatencyList=${LJCInputLatency:=8} ;
 #local StrOutputLatencyList=${LJCOutputLatency:=8} ;
 #local StrDefaultOptionList=${LJCDefaultOption:=--playback} ;
 #local StrDeviceList=${LJCDevice:=default} ;
 #local StrInterfaceOptionList=${LJCInterfaceOption:=} ;
 #local IntDefaultSleepTime=${LJCDefaultSleep:=2};
 #local StrPidFile=${__call_locality}-${TypeUUID}.pid 
 
 
 #local StrSwitchMessages="${StrSwitchesShow}${StrStartSwitches}\n${StrStopSwitches}\n${StrTestSwitches}\n${StrGetMsgSwitches}\n${StrListMsgSwitches}\n" ;
 
 #if [ "${StrDefaultServerNamelist:=NONE}" == "NONE" ] ; then 
  #local CmdLine=( ${StrDefaultServer} ${StrOptionList}  --port-max ${StrOpenPortList} -d ${StrAudioInterfaceList} --rate ${StrRateList} --period ${StrPeriodLenList} --nperiods ${StrNbPeriodsList} --inchannels ${StrInputChannelList} --outchannels ${StrOutputChannelList} --input-latency ${StrInputLatencyList} --output-latency ${StrOutputLatencyList} ${StrDefaultOptionList} --device ${StrDeviceList} ${StrInterfaceOptionList} ) ; 		
 #else
  #local CmdLine=( ${StrDefaultServer} ${StrOptionList} --name ${StrDefaultServerNamelist} --port-max ${StrOpenPortList} -d ${StrAudioInterfaceList} --rate ${StrRateList} --period ${StrPeriodLenList} --nperiods ${StrNbPeriodsList} --inchannels ${StrInputChannelList} --outchannels ${StrOutputChannelList} --input-latency ${StrInputLatencyList} --output-latency ${StrOutputLatencyList} ${StrDefaultOptionList} --device ${StrDeviceList} ${StrInterfaceOptionList} ) ; 		
 #fi   
 #### Should Use Prefix-option LJC -> LoopJackConnection before calling the function if you want to change any
 #### options inside this function. 
 ####
 ####
 #function DisplayErrDev()
 #{
  #local ArrayArg=( $* ) ; 
  #local __call_locality=( DED DisplayErrDev ) ;
  #echo -ne "${ArrayArg[@]}\n" > /dev/stderr ;
 #}  

 #function __main_StartServices()
 #{
		#local __call_locality=( Main __main_StartServices ) ;
		#local Arg0=${ArrayArg[0]} ;
		#local ArrayArg=( $* ) ;
  #local CmdLine=( ${InlineCmdLine//<SPACE>/ } ) ; 
  
  #while [ 1 ] ; do
   #echo -ne "CmdLine:[${CmdLine[@]}]\n" > /dev/stderr ; 
   #eval ${CmdLine[@]} 2>&1 /dev/null ;
   #echo $! > ~/${StrPidFile}.pid ;
   #sleep ${IntDefaultSleepTime} ;
  #done ;
 #}

		
 #if [ "${Arg0:=--startservices}" == "--help"	] ; then 
			#GetVarReference ${__call_locality[1]} ; 
			#echo -ne "${StrSwitchMessages}" > /dev/stderr ; 
	#elif [ "${Arg0:=--startservices}" == "--get" ] ; then 
		#eval """local ArgGet=\${${ArrayArg[1]}}""" ; 
		#echo -ne """${ArgGet}\n""" ;
	#elif [ "${Arg0:=--startservices}" == "--list" ] ; then 
		#eval $( __GetVarReferenceList ) ;
 #elif [ "${Arg0:=--startservices}" == "--testservices" ] ; then 
  #DisplayErrDev "Following command line will be executed:\n\tCmd:[ ${CmdLine[@]} ]\n" ;
  #DisplayErrDev "Waiting ${IntDefaultSleepTime} sec..." ; 
  #sleep ${IntDefaultSleepTime} ; 
  #eval ${CmdLine[@]} ; 
 #elif [ "${Arg0:=--startservices}" == "--stopservices" ] ; then 
  #kill -9 $( cat ~/${__call_locality[0]}.pid )  ;
 #elif [ "${Arg0:=--startservices}" == "--startservices" ] ; then 
  #StrDefaultServerNamelist=${StrDefaultServerNamelist} \
  #StrOptionList=${StrOptionList}                       \
  #StrOpenPortList=${StrOpenPortList}                   \
  #StrAudioInterfaceList=${StrAudioInterfaceList}       \
  #StrRateList=${StrRateList}                           \
  #StrPeriodLenList=${StrPeriodLenList}                 \
  #StrNbPeriodsList=${StrNbPeriodsList}                 \
  #StrInputChannelList=${StrInputChannelList}           \
  #StrOutputChannelList=${StrOutputChannelList}         \
  #StrInputLatencyList=${StrInputLatencyList}           \
  #StrOutputLatencyList=${StrOutputLatencyList}         \
  #StrDefaultOptionList=${StrDefaultOptionList}         \
  #StrDeviceList=${StrDeviceList}                       \
  #StrInterfaceOptionList=${StrInterfaceOptionList}     \
  #StrPidFile=${StrPidFile}                             \
  #InlineCmdLine=${CmdLine[@]//\ /<SPACE>}               \
  #__main_StartServices                                 ; 
 #fi

#}

loop_jack_plumbing()
{
  eval $( __call_locality ) ;
  while [ 1 ] ; do
    jack.plumbing 2>&1 /dev/null ;
    sleep 5 ;
  done ;
}

jack_plumbing_handler()
{
  eval $( __call_locality ) ;
  if [ "${ArrayArg[0]:=ListDisplay}" == "ListDisplay" ] ; then
    #echo -ne "Adding Jack-Plumbing Interface to Zenity List\n" > /dev/stderr ;
    echo "TRUE" ;
    echo "Jack Plumbing Interface" ;
    echo "2" ;
  elif [ "${ArrayArg[0]:=ListDisplay}" == "start" ] ; then
    cd ${USER} ;
    loop_jack_plumbing ;
  fi
}

jack_daemon_handler()
{
  eval $( __call_locality ) ;
  if [ "${ArrayArg[0]:=ListDisplay}" == "ListDisplay" ] ; then
    #echo -ne "Adding Jack-Daemon Interface to Zenity List\n" > /dev/stderr ;
    echo "TRUE" ;
    echo "Jack Deamon" ;
    echo "1" ;
  elif [ "${ArrayArg[0]:=ListDisplay}" == "start" ] ; then
    while [ 1 ] ; do
      loop_jack_connection ;
    done
  fi
}

Zenity_Jack_Manager()
{
 eval $( __call_locality ) ;
 local ArrayHandler=( jack_daemon_handler jack_plumbing_handler ) ;
 local ArrayAction=( ListDisplay start ) ;
 local IntZenityListWidth=600 ;
 local IntZenityListHeight=200 ;
 local StrZenitySep="\"\n\"" ;
 local StrZenityTextHeader="\"Jack audio Service Manager\"" ;
 local StrZenityColumnName=( "\"Services To Start\"" "\"Services Name\" --column=\"Start Order\"" ) ;
 local ListInterfaceService=$( eval echo "zenity ${ZenityDefaultInterface[${IntZenityListInterface}]}" ) ;
 function ListDisplay()
 {
   eval $( __call_locality ) ;
   local StrFuncName=( ListDisplay ) ;
   local CmdEval=( ${ArrayArg[0]} ${ArrayArg[1]} ) ;
   echo -ne "From Function:${StrFuncName[0]}\n\tCmdLine:[ ${CmdEval[@]} ]\n" > /dev/stderr ;
   eval "${CmdEval[@]}" ;
 }
 function start()
 {
   eval $( __call_locality ) ;
   local StrFuncName=( start ) ;
   local CmdEval=( ${ArrayArg[0]} ${ArrayArg[1]} ) ;
   echo -ne "From Function:${StrFuncName[0]}\n\tCmdLine:[ ${CmdEval[@]} ]\n" > /dev/stderr ;
   eval "${CmdEval[@]}" ;
 }
 function Launch()
 {
   eval $( __in_for ArrayAction ${ArrayHandler[intArrayHandler]} ${ArrayArg[1]} ) ;
 }
 local StrCmd=$( eval $( __in_for ArrayHandler Launch ) | eval "${ListInterfaceService}" ) ;
 echo "StrCmd:[${StrCmd}]" ;
 #eval $( __in_for ArrayHandler LaunchAction ) | eval "${ListInterfaceService} ;
 #| eval "${ListInterfaceService}" ;

  #| eval "${ListInterfaceService}" ;
}


