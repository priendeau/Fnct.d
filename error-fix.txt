Following command produce this error inside the function.

Date:20160930-17:33:00
Reference:472de1ad3899ab7a0aa52869a073c19c52178940
file: _sub_Function_Appliance 
function: GnrlPrsrInfctr
With command line : 
unset ArrayLib ; versionGPI=0.0.1 . /etc/init.d/Fnct.D/fnct_lib  ; GPIDisplayDebug=True GPIIsUUIDInstance=True GPIRepoCreatEnabled=False GPIRepositoryCreation=True  GPIFuncStart=RepositoryCreation GPIRepoUser=maxiste.root GPIRepoPerm=775 GnrlPrsrInfctr 
description : Parser-line extracted from ZenityBuildForm does re-use tag __PERM__ inside line for mkdir and chown but not chmod, while __PERM__ is only present inside Association TAG nd not Template. In term, StrAction is not changing even if there
is a loop and Associative Array query via Getter from $( GnrlPrsrInfctr --get ArrayTplAction[${IterActionName}] ) 


OUTPUT:
--------------------------------------------------------------------------------------------------------------
GnrlPrsrInfctr-DEBUG:[ Instance will use UUID reference: a590e8c2-8754-11e6-8b1d-001e4c8856d6 ]
Entry-Start : RepositoryCreation
RepositoryCreation-DEBUG:[ Prefixed Variable: BoolCreateRepository=True
This is an assistant creating the Repository (location: /var/log/Fnct.D/GnrlPrsrInfctr)
.This is reserved to store your Query for future uses. Prepare to enter into
Credential action to create the Repository. In case your haven't chooses Variable
	GPIRepoUser GPIRepoPerm
to set your user(s)/Group accessing the repository or Permission to read and write,
you can stop the application and start over. If you haven't choose a Function Name
for this step it will pop-you a warning and stop the application. ]
RepositoryCreation-DEBUG:[ Creation of PATH /var/log/Fnct.D/GnrlPrsrInfctr, Right Attribution : 775, Owner: maxiste.root ]
RepositoryCreation-CMDLINE:[ Parser TAG-List Variable name : StrTagRepoMkdir: Template:[ __SUDO__ __OPT__ __APPS__ __OWNER__ __PATH__] : content: [ StrAppsSudo:__SUDO__,StrAppsSudoOpt:__OPT__,StrAppsMkdir:__APPS__,StrRepositoryQuery:__PATH__ ] ]
TAGPARSER:[ PairLeft: StrAppsSudo, PairRight: __SUDO__, Query: __SUDO__ __OPT__ __APPS__ __OWNER__ __PATH__ ]
TAGPARSER:[ PairLeft: StrAppsSudoOpt, PairRight: __OPT__, Query: /usr/bin/sudo __OPT__ __APPS__ __OWNER__ __PATH__ ]
TAGPARSER:[ PairLeft: StrAppsMkdir, PairRight: __APPS__, Query: /usr/bin/sudo -s -H __APPS__ __OWNER__ __PATH__ ]
TAGPARSER:[ PairLeft: StrRepositoryQuery, PairRight: __PATH__, Query: /usr/bin/sudo -s -H /bin/mkdir __OWNER__ __PATH__ ]
RepositoryCreation-CMDLINE:[ /usr/bin/sudo -s -H /bin/mkdir __OWNER__ /var/log/Fnct.D/GnrlPrsrInfctr  ]
RepositoryCreation-CMDLINE:[ Parser TAG-List Variable name : StrTagRepoChmod: Template:[ __SUDO__ __OPT__ __APPS__ __OWNER__ __PATH__] : content: [ StrAppsSudo:__SUDO__,StrAppsSudoOpt:__OPT__,StrAppsChmod:__APPS__,StrRepositoryQuery:__PATH__,StrDefaultPerm:__PERM__ ] ]
TAGPARSER:[ PairLeft: StrAppsSudo, PairRight: __SUDO__, Query: __SUDO__ __OPT__ __APPS__ __OWNER__ __PATH__ ]
TAGPARSER:[ PairLeft: StrAppsSudoOpt, PairRight: __OPT__, Query: /usr/bin/sudo __OPT__ __APPS__ __OWNER__ __PATH__ ]
TAGPARSER:[ PairLeft: StrAppsChmod, PairRight: __APPS__, Query: /usr/bin/sudo -s -H __APPS__ __OWNER__ __PATH__ ]
TAGPARSER:[ PairLeft: StrRepositoryQuery, PairRight: __PATH__, Query: /usr/bin/sudo -s -H /bin/chmod __OWNER__ __PATH__ ]
TAGPARSER:[ PairLeft: StrDefaultPerm, PairRight: __PERM__, Query: /usr/bin/sudo -s -H /bin/chmod __OWNER__ /var/log/Fnct.D/GnrlPrsrInfctr ]
RepositoryCreation-CMDLINE:[ /usr/bin/sudo -s -H /bin/chmod __OWNER__ /var/log/Fnct.D/GnrlPrsrInfctr  ]
RepositoryCreation-CMDLINE:[ Parser TAG-List Variable name : StrTagRepoChown: Template:[ __SUDO__ __OPT__ __APPS__ __OWNER__ __PATH__] : content: [ StrAppsSudo:__SUDO__,StrAppsSudoOpt:__OPT__,StrAppsChown:__APPS__,StrRepositoryQuery:__PATH__,StrDefaultUser:__OWNER__ ] ]
TAGPARSER:[ PairLeft: StrAppsSudo, PairRight: __SUDO__, Query: __SUDO__ __OPT__ __APPS__ __OWNER__ __PATH__ ]
TAGPARSER:[ PairLeft: StrAppsSudoOpt, PairRight: __OPT__, Query: /usr/bin/sudo __OPT__ __APPS__ __OWNER__ __PATH__ ]
TAGPARSER:[ PairLeft: StrAppsChown, PairRight: __APPS__, Query: /usr/bin/sudo -s -H __APPS__ __OWNER__ __PATH__ ]
TAGPARSER:[ PairLeft: StrRepositoryQuery, PairRight: __PATH__, Query: /usr/bin/sudo -s -H /bin/chown __OWNER__ __PATH__ ]
TAGPARSER:[ PairLeft: StrDefaultUser, PairRight: __OWNER__, Query: /usr/bin/sudo -s -H /bin/chown __OWNER__ /var/log/Fnct.D/GnrlPrsrInfctr ]
RepositoryCreation-CMDLINE:[ /usr/bin/sudo -s -H /bin/chown maxiste.root /var/log/Fnct.D/GnrlPrsrInfctr  ]

SOLUTION:
Verifying the Array declaration:
'local -a ArrayTplAction' ;
changed for 'local -A ArrayTplAction ;'
--------------------------------------------------------------------------------------------------------------

Date:20160930-20:38:00
Reference:9dc33d066343344b204856f7f6d6779799af486f
file: _sub_Function_Appliance 
function: GnrlPrsrInfctr
With command line : 
unset ArrayLib ; versionGPI=0.0.1 . /etc/init.d/Fnct.D/fnct_lib  ; GPIDisplayDebug=False GPIIsUUIDInstance=True GPIRepoCreatEnabled=True GPIRepositoryCreation=True GPIParserDebug=False  GPIFuncStart=RepositoryCreation GPIRepoUser=maxiste.root GPIRepoPerm=775 GnrlPrsrInfctr
description: Creation is not possible with actual command mkdir.

OUTPUT:
--------------------------------------------------------------------------------------------------------------
Entry-Start : RepositoryCreation
RepositoryCreation-DEBUG:[ Prefixed Variable: BoolCreateRepository=True
This is an assistant creating the Repository (location: /var/log/Fnct.D/GnrlPrsrInfctr)
.This is reserved to store your Query for future uses. Prepare to enter into
Credential action to create the Repository. In case your haven't chooses Variable
	GPIRepoUser GPIRepoPerm
to set your user(s)/Group accessing the repository or Permission to read and write,
you can stop the application and start over. If you haven't choose a Function Name
for this step it will pop-you a warning and stop the application. ]
RepositoryCreation-DEBUG:[ Creation of PATH /var/log/Fnct.D/GnrlPrsrInfctr, Right Attribution : 775, Owner: maxiste.root ]
RepositoryCreation-CMDLINE:[ /usr/bin/sudo -s -H /bin/mkdir /var/log/Fnct.D/GnrlPrsrInfctr  ]
[sudo] password for maxiste: 
/bin/mkdir: cannot create directory ‘/var/log/Fnct.D/GnrlPrsrInfctr’: No such file or directory
RepositoryCreation-CMDLINE:[ /usr/bin/sudo -s -H /bin/chmod 775 /var/log/Fnct.D/GnrlPrsrInfctr  ]
/bin/chmod: cannot access ‘/var/log/Fnct.D/GnrlPrsrInfctr’: No such file or directory
RepositoryCreation-CMDLINE:[ /usr/bin/sudo -s -H /bin/chown maxiste.root /var/log/Fnct.D/GnrlPrsrInfctr  ]
/bin/chown: cannot access ‘/var/log/Fnct.D/GnrlPrsrInfctr’: No such file or directory

--------------------------------------------------------------------------------------------------------------
SOLUTION:
mkdir -p for parent creation as need. Since this application is exempt of uses of aliases, using only
mkdir which is sometimes aliasing to 'mkdir -p' is counter solution not working in system administrator.
- Adding __APPS_OPTS__ inside Mkdir Tag Association and entry-point ( GPIFuncStart=RepositoryCreation )
does working and can be used in more generalistic way to manage path creation. 
command : 
unset ArrayLib ; versionGPI=0.0.1 . /etc/init.d/Fnct.D/fnct_lib  ; GPIDisplayDebug=False GPIIsUUIDInstance=True GPIRepoCreatEnabled=True GPIRepositoryCreation=True GPIParserDebug=False  GPIFuncStart=RepositoryCreation GPIRepoUser=maxiste.root GPIRepoPerm=775 GnrlPrsrInfctr 

Date:20160930-22:36:00
Reference:fb51fdaecc2ec8feb1fa4881bf1d7fc839b5a60c
File: _sub_Function_Appliance 
Function: GnrlPrsrInfctr
With command line :unset ArrayLib ; versionGPI=0.0.1 . /etc/init.d/Fnct.D/fnct_lib ; eval $( GBLDFileStoreInfo=/var/cache/Fnct.D/BuildForm/6e5b6d0c-890f-11e6-8b1d-001e4c8856d6 GBLDAction=GetContent GetterByLineData )   ;
-->
OUTPUT: 
--------------------------------------------------------------------------------------------------------------
GnrlPrsrInfctr-DEBUG:[ Instance will use UUID reference: da52ab2e-877f-11e6-8b1d-001e4c8856d6 ]
Entry-Start : __main_StartServices
__APPS_OPT__: command not found
ParserFunctionEval-CMDLINE:[ Copy of StrAppsTemplate, named StrCmd will hold __APPS__ __APPS_OPT__ __PIPE__ __FILTER__ __FILTER_OPT__  ]
 : command not found
DEBUG:__main_StartServices:[ CmdLine: local StrPairLeft ; 
   local StrPairRight ; 
   local ArrayPFETag=( StrDefaultPipe:__PIPE__ StrApps:__APPS__ StrAppsOpt:__APPS_OPT__ StrFilterApps:__FILTER__ StrFilterOpt:__FILTER_OPT__ StrFileName:__FILE__ ) ; 
   local StrMsg="PairLeft: __LEFT__, PairRight: __RIGHT__, Query: __QUERY__" ; 
   for TagParser in ${ArrayPFETag[@]}  ; do 
     AStrMsg="${StrMsg}" ;
     StrPairRight="${TagParser/#[SIB][tnos][a-zA-Z0-9_]*:/}" ; 
     StrPairLeft="${TagParser/%:__[A-Za-z0-9_,]*/}" ; 
     AStrMsg=${AStrMsg//__LEFT__/${StrPairLeft}} ;
     AStrMsg=${AStrMsg//__RIGHT__/${StrPairRight}} ;
     AStrMsg=${AStrMsg//__QUERY__/${StrCmd}} ;
     VerbMsg=${AStrMsg} VerbHeader=TAGPARSER VerbState=True VerbFormated=True VerbDev=/dev/stderr Verbosis ; 
     eval StrCmd=\${\StrCmd//${StrPairRight}/\${${StrPairLeft}}}  ; 
   done ; 
   unset StrPairRight StrPairLeft ArrayPFETag ; ]
TAGPARSER:[ PairLeft: StrDefaultPipe, PairRight: __PIPE__, Query: __APPS__ __APPS_OPT__ __PIPE__ __FILTER__ __FILTER_OPT__  ]
TAGPARSER:[ PairLeft: StrApps, PairRight: __APPS__, Query: __APPS__ __APPS_OPT__ | __FILTER__ __FILTER_OPT__  ]
TAGPARSER:[ PairLeft: StrAppsOpt, PairRight: __APPS_OPT__, Query: /usr/bin/dpkg __APPS_OPT__ | __FILTER__ __FILTER_OPT__  ]
TAGPARSER:[ PairLeft: StrFilterApps, PairRight: __FILTER__, Query: /usr/bin/dpkg --get-selections | __FILTER__ __FILTER_OPT__  ]
TAGPARSER:[ PairLeft: StrFilterOpt, PairRight: __FILTER_OPT__, Query: /usr/bin/dpkg --get-selections | /usr/bin/gawk __FILTER_OPT__  ]
TAGPARSER:[ PairLeft: StrFileName, PairRight: __FILE__, Query: /usr/bin/dpkg --get-selections | /usr/bin/gawk -f __FILE__  ]
ParserFunctionEval-CMDLINE:[ Parsed CmdLine: /usr/bin/dpkg --get-selections | /usr/bin/gawk -f /home/maxiste/github/Fnct.D/awk-script/dpkg-col-display.awk  ]
dpkg: no packages found matching |
dpkg: no packages found matching /usr/bin/gawk
dpkg: no packages found matching -f
dpkg: no packages found matching /home/maxiste/github/Fnct.D/awk-script/dpkg-col-display.awk
${StrCmd}

SOLUTION:
Based on Query BuilForm : unset ArrayLib ; versionGPI=0.0.1 . /etc/init.d/Fnct.D/fnct_lib ; eval $( GBLDFileStoreInfo=/var/cache/Fnct.D/BuildForm/6e5b6d0c-890f-11e6-8b1d-001e4c8856d6 GBLDAction=GetContent GetterByLineData )   ;
- Changing for a double eval will execute the query :
eval eval "\${${StrParserResult}}" inside if [ ${BoolExecuteEval:=True} ] ... 
${${StrParserResult}} is by default a Variable Named $StrCmd which Verbosiscan display the content.
evaluating once it turn into ${StrCmd} but have no chance to turn into a executable compound elements.
The double eval eval allow to re-evaluate the statement into real command line.  

Date:20161003-15:07:00
Reference:3a823d9f23772dc301c947a641e0a4f5bd7e56b2
File: _sub_Function_Appliance 
Function: GnrlPrsrInfctr
With command line :
--> unset ArrayLib ; versionGPI=0.0.1 . /etc/init.d/Fnct.D/fnct_lib ; eval $( GBLDFileStoreInfo=/var/cache/Fnct.D/BuildForm/def9e256-8990-11e6-8b1d-001e4c8856d6 GBLDAction=GetContent GetterByLineData )   ;  IntSize=$( wc -c /var/log/Fnct.D/GnrlPrsrInfctr/${UUID} | cut -d ' ' -f 1 ) ; echo -ne "Size of File: /var/log/Fnct.D/GnrlPrsrInfctr/${UUID}: ${IntSize}\n" ;
Description: 
OUTPUT: 
--------------------------------------------------------------------------------------------------------------
GnrlPrsrInfctr-DEBUG:[ Instance will use UUID reference: 8be2f07e-899c-11e6-8b1d-001e4c8856d6 ]
Entry-Start : __main_StartServices
__APPS_OPT__: command not found
ParserFunctionEval-CMDLINE:[ Copy of StrAppsTemplate, named StrCmd will hold __APPS__ __APPS_OPT__ __PIPE__ __FILTER__ __FILTER_OPT__ ]
 : command not found
DEBUG:__main_StartServices:[ CmdLine: local StrPairLeft ; 
   local StrPairRight ; 
   local ArrayPFETag=( StrDefaultPipe:__PIPE__ StrApps:__APPS__ StrAppsOpt:__APPS_OPT__ StrFilterApps:__FILTER__ StrFilterOpt:__FILTER_OPT__ StrFileName:__FILE__ ) ; 
   local StrMsg="PairLeft: __LEFT__, PairRight: __RIGHT__, Query: __QUERY__" ; 
   for TagParser in ${ArrayPFETag[@]}  ; do 
     AStrMsg="${StrMsg}" ;
     StrPairRight="${TagParser/#[SIB][tnos][a-zA-Z0-9_]*:/}" ; 
     StrPairLeft="${TagParser/%:__[A-Za-z0-9_,]*/}" ; 
     AStrMsg=${AStrMsg//__LEFT__/${StrPairLeft}} ;
     AStrMsg=${AStrMsg//__RIGHT__/${StrPairRight}} ;
     AStrMsg=${AStrMsg//__QUERY__/${StrCmd}} ;
     VerbMsg=${AStrMsg} VerbHeader=TAGPARSER VerbState=True VerbFormated=True VerbDev=/dev/stderr Verbosis ; 
     eval StrCmd=\${\StrCmd//${StrPairRight}/\${${StrPairLeft}}}  ; 
   done ; 
   unset StrPairRight StrPairLeft ArrayPFETag ; ]
TAGPARSER:[ PairLeft: StrDefaultPipe, PairRight: __PIPE__, Query: __APPS__ __APPS_OPT__ __PIPE__ __FILTER__ __FILTER_OPT__ ]
TAGPARSER:[ PairLeft: StrApps, PairRight: __APPS__, Query: __APPS__ __APPS_OPT__ | __FILTER__ __FILTER_OPT__ ]
TAGPARSER:[ PairLeft: StrAppsOpt, PairRight: __APPS_OPT__, Query: /usr/bin/dpkg __APPS_OPT__ | __FILTER__ __FILTER_OPT__ ]
TAGPARSER:[ PairLeft: StrFilterApps, PairRight: __FILTER__, Query: /usr/bin/dpkg --get-selections | __FILTER__ __FILTER_OPT__ ]
TAGPARSER:[ PairLeft: StrFilterOpt, PairRight: __FILTER_OPT__, Query: /usr/bin/dpkg --get-selections | /usr/bin/gawk __FILTER_OPT__ ]
TAGPARSER:[ PairLeft: StrFileName, PairRight: __FILE__, Query: /usr/bin/dpkg --get-selections | /usr/bin/gawk -f __FILE__ ]
ParserFunctionEval-CMDLINE:[ Parsed CmdLine: /usr/bin/dpkg --get-selections | /usr/bin/gawk -f awk-script/dpkg-col-display.awk ]
EXECUTE-ParserFunctionEval:[ Query Executed, UUID-Variable Reference:[ UUID ] ]
Size of File: /var/log/Fnct.D/GnrlPrsrInfctr/8be2f07e-899c-11e6-8b1d-001e4c8856d6: 106161
--------------------------------------------------------------------------------------------------------------
SOLUTION:
Using Verbosis function with this form:
VerbMsg=$( eval eval "\${${StrParserResult}}" ) \
VerbDev=${StrDestinationResult} \
VerbEvalForm=False \
VerbHeader="" \
VerbState=True \
VerbFormated=False Verbosis ; 
- Where VerbMsg=MSG is usually the form or accepting a variable, using double-eval with executive brace does
working and we are using the VerbDev=Device usually to specified the /dev/stdout, /dev/stderr do support file
as well. Notice,  StrDestinationResult is uniformely supporting the UUID and .GnrlPrsrInfctr for prior 
assignation. 

Date:20161003-15:56:00
Reference:37079008981c26ab709918d0fbf04179c0bcc0d8
File: _sub_Function_Appliance 
Function: GnrlPrsrInfctr
With command line : 
-->unset ArrayLib ; versionGPI=0.0.1 . /etc/init.d/Fnct.D/fnct_lib ; eval $( GBLDFileStoreInfo=/var/cache/Fnct.D/BuildForm/bb7e1d60-899f-11e6-8b1d-001e4c8856d6 GBLDAction=GetContent GetterByLineData )   ;  IntSize=$( wc -c /var/log/Fnct.D/GnrlPrsrInfctr/${UUID} | cut -d ' ' -f 1 ) ; echo -ne "Size of File: /var/log/Fnct.D/GnrlPrsrInfctr/${UUID}: ${IntSize}\n" ;
Description: 
Should Throw the output of the command-line inside UUID File repository and launch Zenity in --text-info mode to read the content. 
OUTPUT: 
--------------------------------------------------------------------------------------------------------------
GnrlPrsrInfctr-DEBUG:[ Instance will use UUID reference: a541232a-89a5-11e6-8b1d-001e4c8856d6 ]
Entry-Start : __main_StartServices
__APPS_OPT__: command not found
ParserFunctionEval-CMDLINE:[ Copy of StrAppsTemplate, named StrCmd will hold __APPS__ __APPS_OPT__ __PIPE__ __FILTER__ __FILTER_OPT__ ]
 : command not found
DEBUG:__main_StartServices:[ CmdLine: local StrPairLeft ; 
   local StrPairRight ; 
   local ArrayPFETag=( StrDefaultPipe:__PIPE__ StrApps:__APPS__ StrAppsOpt:__APPS_OPT__ StrFilterApps:__FILTER__ StrFilterOpt:__FILTER_OPT__ StrFileName:__FILE__ ) ; 
   local StrMsg="PairLeft: __LEFT__, PairRight: __RIGHT__, Query: __QUERY__" ; 
   for TagParser in ${ArrayPFETag[@]}  ; do 
     AStrMsg="${StrMsg}" ;
     StrPairRight="${TagParser/#[SIB][tnos][a-zA-Z0-9_]*:/}" ; 
     StrPairLeft="${TagParser/%:__[A-Za-z0-9_,]*/}" ; 
     AStrMsg=${AStrMsg//__LEFT__/${StrPairLeft}} ;
     AStrMsg=${AStrMsg//__RIGHT__/${StrPairRight}} ;
     AStrMsg=${AStrMsg//__QUERY__/${StrCmd}} ;
     VerbMsg=${AStrMsg} VerbHeader=TAGPARSER VerbState=True VerbFormated=True VerbDev=/dev/stderr Verbosis ; 
     eval StrCmd=\${\StrCmd//${StrPairRight}/\${${StrPairLeft}}}  ; 
   done ; 
   unset StrPairRight StrPairLeft ArrayPFETag ; ]
TAGPARSER:[ PairLeft: StrDefaultPipe, PairRight: __PIPE__, Query: __APPS__ __APPS_OPT__ __PIPE__ __FILTER__ __FILTER_OPT__ ]
TAGPARSER:[ PairLeft: StrApps, PairRight: __APPS__, Query: __APPS__ __APPS_OPT__ | __FILTER__ __FILTER_OPT__ ]
TAGPARSER:[ PairLeft: StrAppsOpt, PairRight: __APPS_OPT__, Query: /usr/bin/dpkg __APPS_OPT__ | __FILTER__ __FILTER_OPT__ ]
TAGPARSER:[ PairLeft: StrFilterApps, PairRight: __FILTER__, Query: /usr/bin/dpkg --get-selections | __FILTER__ __FILTER_OPT__ ]
TAGPARSER:[ PairLeft: StrFilterOpt, PairRight: __FILTER_OPT__, Query: /usr/bin/dpkg --get-selections | /usr/bin/gawk __FILTER_OPT__ ]
TAGPARSER:[ PairLeft: StrFileName, PairRight: __FILE__, Query: /usr/bin/dpkg --get-selections | /usr/bin/gawk -f __FILE__ ]
ParserFunctionEval-CMDLINE:[ Parsed CmdLine: /usr/bin/dpkg --get-selections | /usr/bin/gawk -f awk-script/dpkg-col-display.awk ]
EXECUTE-ParserFunctionEval:[ Query Executed, UUID-Variable Reference:[ UUID ] ]
--------------------------------------------------------------------------------------------------------------
SOLUTION:
- working, Zenity --text-info does provide a solution to see the outputed information.

Date:20161003-17:01:00
Reference:ddca85e09c11af1a7f3bb2133dc76121fed89efa
File: _sub_Function_Appliance 
Function: GnrlPrsrInfctr
With command line :
-->unset ArrayLib ; versionGPI=0.0.1 . /etc/init.d/Fnct.D/fnct_lib ; eval $( GBLDFileStoreInfo=/var/cache/Fnct.D/BuildForm/bb7e1d60-899f-11e6-8b1d-001e4c8856d6 GBLDAction=GetContent GetterByLineData | sed 's/GPIIsUUIDInstance=True/GPIIsUUIDInstance=False/g' ) ;  
Description: BuildForm UUID:bb7e1d60-899f-11e6-8b1d-001e4c8856d6 was slightly changed from it's query to use sed tool to exchange value from 
, changing GPIIsUUIDInstance=True to False to test creation of local file .GnrlPrsrInfctr and dumpimg the content and see if there is error on the 
debug ouput generated by this trial.  
OUTPUT: 
--------------------------------------------------------------------------------------------------------------
__APPS_OPT__: command not found
ParserFunctionEval-CMDLINE:[ Copy of StrAppsTemplate, named StrCmd will hold __APPS__ __APPS_OPT__ __PIPE__ __FILTER__ __FILTER_OPT__ ]
 : command not found
DEBUG:__main_StartServices:[ CmdLine: local StrPairLeft ; 
   local StrPairRight ; 
   local ArrayPFETag=( StrDefaultPipe:__PIPE__ StrApps:__APPS__ StrAppsOpt:__APPS_OPT__ StrFilterApps:__FILTER__ StrFilterOpt:__FILTER_OPT__ StrFileName:__FILE__ ) ; 
   local StrMsg="PairLeft: __LEFT__, PairRight: __RIGHT__, Query: __QUERY__" ; 
   for TagParser in ${ArrayPFETag[@]}  ; do 
     AStrMsg="${StrMsg}" ;
     StrPairRight="${TagParser/#[SIB][tnos][a-zA-Z0-9_]*:/}" ; 
     StrPairLeft="${TagParser/%:__[A-Za-z0-9_,]*/}" ; 
     AStrMsg=${AStrMsg//__LEFT__/${StrPairLeft}} ;
     AStrMsg=${AStrMsg//__RIGHT__/${StrPairRight}} ;
     AStrMsg=${AStrMsg//__QUERY__/${StrCmd}} ;
     VerbMsg=${AStrMsg} VerbHeader=TAGPARSER VerbState=True VerbFormated=True VerbDev=/dev/stderr Verbosis ; 
     eval StrCmd=\${\StrCmd//${StrPairRight}/\${${StrPairLeft}}}  ; 
   done ; 
   unset StrPairRight StrPairLeft ArrayPFETag ; ]
TAGPARSER:[ PairLeft: StrDefaultPipe, PairRight: __PIPE__, Query: __APPS__ __APPS_OPT__ __PIPE__ __FILTER__ __FILTER_OPT__ ]
TAGPARSER:[ PairLeft: StrApps, PairRight: __APPS__, Query: __APPS__ __APPS_OPT__ | __FILTER__ __FILTER_OPT__ ]
TAGPARSER:[ PairLeft: StrAppsOpt, PairRight: __APPS_OPT__, Query: /usr/bin/dpkg __APPS_OPT__ | __FILTER__ __FILTER_OPT__ ]
TAGPARSER:[ PairLeft: StrFilterApps, PairRight: __FILTER__, Query: /usr/bin/dpkg --get-selections | __FILTER__ __FILTER_OPT__ ]
TAGPARSER:[ PairLeft: StrFilterOpt, PairRight: __FILTER_OPT__, Query: /usr/bin/dpkg --get-selections | /usr/bin/gawk __FILTER_OPT__ ]
TAGPARSER:[ PairLeft: StrFileName, PairRight: __FILE__, Query: /usr/bin/dpkg --get-selections | /usr/bin/gawk -f __FILE__ ]
ParserFunctionEval-CMDLINE:[ Parsed CmdLine: /usr/bin/dpkg --get-selections | /usr/bin/gawk -f awk-script/dpkg-col-display.awk ]
EXECUTE-StatementExecution:[ Query Executed, No UUID used, Reference file:[ .GnrlPrsrInfctr ] ]

** (zenity:20983): WARNING **: Error retrieving accessibility bus address: org.freedesktop.DBus.Error.ServiceUnknown: The name org.a11y.Bus was not provided by any .service files
--------------------------------------------------------------------------------------------------------------
SOLUTION:
Does provide the .GnrlPrsrInfctr and does not affect output quality. Does also retreive the message 
GnrlPrsrInfctr-DEBUG:[ Instance will use UUID reference: __UUID__ ]
and message:
EXECUTE-ParserFunctionEval:[ Query Executed, UUID-Variable Reference:[ UUID ] ] by showing instead:
EXECUTE-StatementExecution:[ Query Executed, No UUID used, Reference file:[ .GnrlPrsrInfctr ] ]
- Zenity is openning and showing the content of the executed command. 
- This test is in regard of creating function ZenityHandlerOut and ReportReference and proove
uses of ValueToVariable does reduce transformation of code and allow moving part into tinier part 
as long the small moved part should not transform a variable and next-code unmoved SHALL not inherit from
this infortmation or mechanism to transfert the value should be added. 

