declare -xr FNCTDLIBPATH=/etc/init.d/Fnct.D 2> /dev/null ; 

StrArrayLib="_sub_Structure,fnct_debian_lib,_sub_Function_Appliance,_sub_jack_script,_sub_Git,_sub_setup_py_extra_cmd,_sub_ssh_handler,_sub_vlc_services,_sub_binary,_sub_PythonBoost" ; 
declare -a ArrayLib=( ${StrArrayLib//,/ } ) ;

export ORIGINVERSION=0.0.0 ;
export DEVELVERSION=0.0.1 ;
export THISVERSION=0.0.2 ; 

declare -A ArrayFnctDVersion ;
ArrayFnctDVersion["versionTP"]=${THISVERSION}   ;
ArrayFnctDVersion["versionGCT"]=${DEVELVERSION} ;
ArrayFnctDVersion["versionGPI"]=${THISVERSION} ;
ArrayFnctDVersion["versionCA"]=${THISVERSION}   ;
ArrayFnctDVersion["versionGSPN"]=${THISVERSION} ;
ArrayFnctDVersion["versionMC"]=${THISVERSION}   ;   
ArrayFnctDVersion["versionLSS"]=${DEVELVERSION} ;
ArrayFnctDVersion["versionGOD"]=${THISVERSION} ; 
ArrayFnctDVersion["versionNM"]=${THISVERSION} ; 
ArrayFnctDVersion["versionB2DT"]=${THISVERSION} ; 
ArrayFnctDVersion["versionSSA"]=${THISVERSION} ; 
ArrayFnctDVersion["versionVSC"]=${ORIGINVERSION} ; 
ArrayFnctDVersion["versionNSS"]=${ORIGINVERSION} ; 
ArrayFnctDVersion["versionSCH"]=${DEVELVERSION} ; 

function FnctDVersion()
{
 local StrExportVar="__VAR__" ; 
 for VerName in ${!ArrayFnctDVersion[@]} ; do 
  StrVersion=${ArrayFnctDVersion[${VerName}]} ;
  echo -ne "Set FunctionTrigger:${VerName} Version:${StrVersion}\n" > /dev/stderr ; 
  StrExportVar=${StrExportVar//__VAR__/${VerName}=${StrVersion} __VAR__}
  export ${VerName}=${StrVersion} ; 
 done 
 StrExportVar=${StrExportVar//__VAR__/} ;
 echo ${StrExportVar} ;  
}


alias reload_fnctd='LibLoader --stopservices ; eval $( FnctDVersion ) LibLoader --startservices' 
alias update_sys_lib='source ~/.bashrc ; sudo -s ldconfig -f /etc/ld.so.conf ; sync  ; reload_fnctd'

eval $( FnctDVersion ) . ${FNCTDLIBPATH}/fnct_lib ;
