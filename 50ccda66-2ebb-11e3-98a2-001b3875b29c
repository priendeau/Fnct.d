###
### FootPrint Added, see Prefixed-Var ZSEAddFootPrint from ZenityShellEval
###

###File:/etc/init.d/Fnct.d/50ccda66-2ebb-11e3-98a2-001b3875b29c
###UUID-TIME-MARKER:7bd963ec-2efb-11e3-98a2-001b3875b29c
###Date: ${StrDateFormat}
###Sha1Sum: 2bf10cc7bdfd39051f744a50428fad82cd02ac4b
### Size:5129
### NbWord: 490\n

unset ZenityLibPolicyList
function ZenityLibPolicyList()
{
 local __call_locality=( ZLPL ZenityLibPolicyList ) ;
 local ArrayArg=( $* ) ;
 local Arg0=${ArrayArg[0]};  
 local StrPolicyFunctionStream="" ; 
 local StrFuncPolicyF=${ZLPLPolicytoFunc:=__get_PolicyFunctionList}
 local StrDefaultSelectValue=${ZLPLPolicyFuncSelectionV:=FALSE}
 
 function __get_PolicyFunctionList()
 {
   
   for (( intx=0 ; intx <= ${#ArrayLibPolicy[@]}-1; intx++ )) ; do 
    local ArrayItem=( "${ArrayLibPolicy[${intx}]//:/ }" ) ; 
    echo -ne "${StrDefaultSelectValue} ${ArrayItem[@]} " ; 
   done
 }

 
 
 function __Header()
 {
  local __call_locality=( Header __Header ) ;
  local ArrayArg=( $* ) ;
  local Arg0=${ArrayArg[0]};   
  local StrContentList=${HeaderPolicyParsedContent:=FALSE DebianAptSrcCompiler True fnct_debian_lib normal}
  zenity --list \
         --height=700 \
         --width=600 \
         --separator=',' \
         --text="Function List Entry" \
         --column="Selected" \
         --column="Function Name" \
         --column="Usability" \
         --column="Lib origin" \
         --column="Priority" \
         --checklist --multiple ${StrContentList}
 }
 
 local StrSwitchMessages="${StrSwitchesShow}${StrStartSwitches}\n${StrGetMsgSwitches}\n${StrListMsgSwitches}\n" ;
 function __main_StartServices()
 {
  local __call_locality=( Main __main_StartServices ) ;
  local ArrayArg=( $* ) ;
  local Arg0=${ArrayArg[0]};
  local StrPolicyFunctionStream=$( StrDefaultSelectValue=${StrDefaultSelectValue} ${StrFuncPolicyF} ) ; 
  HeaderPolicyParsedContent=${StrPolicyFunctionStream} __Header 

 }
 if [ "${Arg0:=--startservices}" == "--help"	] ; then 
  GetVarReference ${__call_locality[1]} ; 
  echo -ne "${StrSwitchMessages}" > /dev/stderr ; 
 elif [ "${Arg0:=--startservices}" == "--get" ] ; then 
  eval """local ArgGet=\${${ArrayArg[1]}}""" ; 
  echo -ne """${ArgGet}\n""" ;
 elif [ "${Arg0:=--startservices}" == "--list" ] ; then 
  eval $( __GetVarReferenceList ) ;
 elif [ "${Arg0:=--startservices}" == "--startservices" ] ; then 
  StrFuncPolicyF=${StrFuncPolicyF} \
  StrDefaultSelectValue=${StrDefaultSelectValue} \
  StrPolicyFunctionStream=${StrPolicyFunctionStream} \
  __main_StartServices       ${Arg0} ; 
 fi

}



unset ZenityRadioOptionConfig
function ZenityRadioOptionConfig()
{
 local __call_locality=( ZROC ZenityRadioOptionConfig ) ;
 local ArrayArg=( $* ) ;
 local Arg0=${ArrayArg[0]};  
 
 local StrSwitchMessages="${StrSwitchesShow}${StrStartSwitches}\n${StrGetMsgSwitches}\n${StrListMsgSwitches}\n" ;
 function __main_StartServices()
 {
  local __call_locality=( Main __main_StartServices ) ;
  local ArrayArg=( $* ) ;
  local Arg0=${ArrayArg[0]};
  

 }
 if [ "${Arg0:=--startservices}" == "--help"	] ; then 
  GetVarReference ${__call_locality[1]} ; 
  echo -ne "${StrSwitchMessages}" > /dev/stderr ; 
 elif [ "${Arg0:=--startservices}" == "--get" ] ; then 
  eval """local ArgGet=\${${ArrayArg[1]}}""" ; 
  echo -ne """${ArgGet}\n""" ;
 elif [ "${Arg0:=--startservices}" == "--list" ] ; then 
  eval $( __GetVarReferenceList ) ;
 elif [ "${Arg0:=--startservices}" == "--startservices" ] ; then 
  __main_StartServices       ${Arg0} ; 
 fi

}

unset ZenityListOptionConfig
function ZenityListOptionConfig()
{
 local __call_locality=( ZLOC ZenityListOptionConfig ) ;
 local ArrayArg=( $* ) ;
 local Arg0=${ArrayArg[0]};  
 
 local StrSwitchMessages="${StrSwitchesShow}${StrStartSwitches}\n${StrGetMsgSwitches}\n${StrListMsgSwitches}\n" ;
 function __main_StartServices()
 {
  local __call_locality=( Main __main_StartServices ) ;
  local ArrayArg=( $* ) ;
  local Arg0=${ArrayArg[0]};
 

 }
 if [ "${Arg0:=--startservices}" == "--help"	] ; then 
  GetVarReference ${__call_locality[1]} ; 
  echo -ne "${StrSwitchMessages}" > /dev/stderr ; 
 elif [ "${Arg0:=--startservices}" == "--get" ] ; then 
  eval """local ArgGet=\${${ArrayArg[1]}}""" ; 
  echo -ne """${ArgGet}\n""" ;
 elif [ "${Arg0:=--startservices}" == "--list" ] ; then 
  eval $( __GetVarReferenceList ) ;
 elif [ "${Arg0:=--startservices}" == "--startservices" ] ; then 
  __main_StartServices       ${Arg0} ; 
fi
}

unset ZenityPrefixedVarBuilder
function ZenityPrefixedVarBuilder()
{
 local __call_locality=( ZPVB ZenityPrefixedVarBuilder ) ;
 local ArrayArg=( $* ) ;
 local Arg0=${ArrayArg[0]};  
 local StrFunctionBuildVar=${ZPVBFunctionBuuildList:=None}
 
 
 
 local StrSwitchMessages="${StrSwitchesShow}${StrStartSwitches}\n${StrGetMsgSwitches}\n${StrListMsgSwitches}\n" ;
 function __main_StartServices()
 {
  local __call_locality=( Main __main_StartServices ) ;
  local ArrayArg=( $* ) ;
  local Arg0=${ArrayArg[0]};
  

 }
 if [ "${Arg0:=--startservices}" == "--help"	] ; then 
  GetVarReference ${__call_locality[1]} ; 
  echo -ne "${StrSwitchMessages}" > /dev/stderr ; 
 elif [ "${Arg0:=--startservices}" == "--get" ] ; then 
  eval """local ArgGet=\${${ArrayArg[1]}}""" ; 
  echo -ne """${ArgGet}\n""" ;
 elif [ "${Arg0:=--startservices}" == "--list" ] ; then 
  eval $( __GetVarReferenceList ) ;
 elif [ "${Arg0:=--startservices}" == "--startservices" ] ; then 
  __main_StartServices       ${Arg0} ; 
 fi

}
